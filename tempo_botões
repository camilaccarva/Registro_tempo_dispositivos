#include <Vector.h>

unsigned long tempoFinal = 0;
unsigned long tempoInicio = 0;
unsigned long tempoAtual = 0;
bool estadoAnterior = LOW;
int ledLigado = 0;
bool estadoAnteriorLiga = LOW; 

Vector<Vector<unsigned long>> lista_botoes; // Vetor de vetores para armazenar horários
Vector<unsigned long> botoes; // Vetor que contém o número dos pinos

void setup() {
  Serial.begin(9600);

  // Inicializa os pinos
  pinMode(10, OUTPUT); 
  pinMode(9, OUTPUT);

  // Adiciona os pinos dos botões no vetor
  botoes.push_back(8);
  botoes.push_back(11);
  botoes.push_back(12);
  botoes.push_back(13);

  // Configura os pinos como entradas com resistores pull-up
  for (int i = 0; i < botoes.size(); i++) {
    pinMode(botoes[i], INPUT_PULLUP);
    Vector<unsigned long> novoVetor; // Cria um vetor para cada botão
    lista_botoes.push_back(novoVetor); // Adiciona ao vetor principal
  }
}

void sendManchester(int bit) {
  if (bit == 0) {
    digitalWrite(10, LOW);
    delay(100); // Half-bit period
  } else {
    digitalWrite(10, HIGH);
    delay(100); // Half-bit period
  }
}

void ler_botao(int pino, int indice) {
  int estadoBotao = digitalRead(pino); // Lê o estado atual do botão

  // Detecta quando o botão é pressionado
  if (estadoBotao == HIGH && estadoAnterior == LOW) {
    Serial.println("Botão " + String(indice) + " pressionado!");

    Serial.print("Tempo: ");
    Serial.println(tempoAtual);

    // Armazena o horário no vetor correspondente
    lista_botoes[indice].push_back(tempoAtual);
    Serial.println("lista_botoes " + String(indice) + " = " + String(lista_botoes[indice].back())); // Acessa o último valor

    // Transmite uma amostra de dados codificados Manchester (exemplo: 1010)
    int message[] = {1, 0};
    for (int i = 0; i < sizeof(message) / sizeof(message[0]); i++) {
      sendManchester(message[i]);
    }
  }

  // Atualiza o estado anterior do botão
  estadoAnterior = estadoBotao;
}

void loop() {
  // Atualiza o tempo atual
  tempoAtual = millis();   // Atualiza o tempo com o valor de millis()



  ler_botao(11, 1);
  ler_botao(12, 2);
  ler_botao(8, 0);
  ler_botao(13,3);
delay(200);
}
